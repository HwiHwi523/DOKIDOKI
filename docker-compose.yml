version: "3.8"

services:
  frontend:
    container_name: frontend
    build:
      context: ./frontend
      dockerfile: dockerfile
    
    environment:
      - NODE_ENV=development
      - CHOKIDAR_USEPOLLING=true
    restart: always
    stdin_open: true
    tty: true
    networks:
      dokidoki_net:
        ipv4_address: 172.20.153.3


  database_redis:
    container_name: database_redis
    image: redis
    command: ["redis-server", "--appendonly", "yes", "--replica-read-only", "no","--requirepass", "qhBb3Ht7Psvz54PCjlAw", "--notify-keyspace-events", "KEx"]
    networks:
      - dokidoki_net
    restart: always
    ports:
      - 6379:6379

  api-gateway-server:
    container_name: api-gateway-server
    build:
      context: ./backend/api-gateway
      dockerfile: dockerfile
    restart: always
    stdin_open: true
    tty: true
    networks:
      dokidoki_net:
        ipv4_address: 172.20.128.2


  bid-server:
    container_name: bid-server
    build:
      context: ./backend/bid
      dockerfile: dockerfile
    volumes:
      - /var/log/springboot/bid:/var/log/springboot/bid
    restart: always
    networks:
      - dokidoki_net

  auction-server:
    container_name: auction-server
    build:
      context: ./backend/auction
      dockerfile: dockerfile
    environment:
      SPRING_DATASOURCE_URL: jdbc:mysql://172.17.0.1:3306/dokidb?serverTimezone=UTC&characterEncoding=UTF-8
      SPRING_DATASOURCE_USERNAME: dokidoki
      SPRING_DATASOURCE_PASSWORD: dokidoki202
    volumes:
      - /var/log/springboot/auction:/var/log/springboot/auction
    restart: always
    networks:
      - dokidoki_net

  user-server:
    container_name: user-server
    build:
      context: ./backend/user-server
      dockerfile: dockerfile
    environment:
      SPRING_DATASOURCE_URL: jdbc:mysql://172.17.0.1:3306/dokidb?serverTimezone=UTC&characterEncoding=UTF-8
      SPRING_DATASOURCE_USERNAME: dokidoki
      SPRING_DATASOURCE_PASSWORD: dokidoki202
    restart: always
    networks:
      - dokidoki_net

  notice-server:
    container_name: notice-server
    build:
      context: ./backend/notice
      dockerfile: dockerfile
    volumes:
      - /var/log/springboot/notice:/var/log/springboot/notice
    restart: always
    networks:
      - dokidoki_net
  
networks:
  dokidoki_net:
    driver: bridge
    ipam:
      driver: default
      config:
        - subnet: 172.20.0.0/16
